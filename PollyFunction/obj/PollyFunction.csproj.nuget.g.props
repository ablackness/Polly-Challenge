<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <RestoreSuccess Condition=" '$(RestoreSuccess)' == '' ">True</RestoreSuccess>
    <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
    <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">/Users/alexblack/dev/lambda/Polly-Challenge/PollyFunction/obj/project.assets.json</ProjectAssetsFile>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">/Users/alexblack/.nuget/packages/</NuGetPackageRoot>
    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">/Users/alexblack/.nuget/packages/;/usr/local/share/dotnet/sdk/NuGetFallbackFolder</NuGetPackageFolders>
    <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">4.9.4</NuGetToolVersion>
  </PropertyGroup>
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>
  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <Import Project="$(NuGetPackageRoot)xunit.runner.msbuild/2.4.1/build/net452/xunit.runner.msbuild.props" Condition="Exists('$(NuGetPackageRoot)xunit.runner.msbuild/2.4.1/build/net452/xunit.runner.msbuild.props')" />
    <Import Project="$(NuGetPackageRoot)xunit.runner.console/2.4.1/build/xunit.runner.console.props" Condition="Exists('$(NuGetPackageRoot)xunit.runner.console/2.4.1/build/xunit.runner.console.props')" />
    <Import Project="$(NuGetPackageRoot)xunit.core/2.4.1/build/xunit.core.props" Condition="Exists('$(NuGetPackageRoot)xunit.core/2.4.1/build/xunit.core.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.netcore.app/2.1.0/build/netcoreapp2.1/Microsoft.NETCore.App.props" Condition="Exists('$(NuGetPackageRoot)microsoft.netcore.app/2.1.0/build/netcoreapp2.1/Microsoft.NETCore.App.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.codecoverage/16.0.1/build/netstandard1.0/Microsoft.CodeCoverage.props" Condition="Exists('$(NuGetPackageRoot)microsoft.codecoverage/16.0.1/build/netstandard1.0/Microsoft.CodeCoverage.props')" />
    <Import Project="$(NuGetPackageRoot)microsoft.net.test.sdk/16.0.1/build/netcoreapp1.0/Microsoft.NET.Test.Sdk.props" Condition="Exists('$(NuGetPackageRoot)microsoft.net.test.sdk/16.0.1/build/netcoreapp1.0/Microsoft.NET.Test.Sdk.props')" />
  </ImportGroup>
  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <Pkgxunit_runner_console Condition=" '$(Pkgxunit_runner_console)' == '' ">/Users/alexblack/.nuget/packages/xunit.runner.console/2.4.1</Pkgxunit_runner_console>
    <Pkgxunit_analyzers Condition=" '$(Pkgxunit_analyzers)' == '' ">/Users/alexblack/.nuget/packages/xunit.analyzers/0.10.0</Pkgxunit_analyzers>
    <PkgAWSSDK_Core Condition=" '$(PkgAWSSDK_Core)' == '' ">/Users/alexblack/.nuget/packages/awssdk.core/3.3.100.5</PkgAWSSDK_Core>
    <PkgAWSSDK_XRay Condition=" '$(PkgAWSSDK_XRay)' == '' ">/Users/alexblack/.nuget/packages/awssdk.xray/3.3.3</PkgAWSSDK_XRay>
    <PkgAWSSDK_SQS Condition=" '$(PkgAWSSDK_SQS)' == '' ">/Users/alexblack/.nuget/packages/awssdk.sqs/3.3.3.54</PkgAWSSDK_SQS>
    <PkgAWSSDK_KeyManagementService Condition=" '$(PkgAWSSDK_KeyManagementService)' == '' ">/Users/alexblack/.nuget/packages/awssdk.keymanagementservice/3.3.7.16</PkgAWSSDK_KeyManagementService>
    <PkgAWSSDK_ApiGatewayManagementApi Condition=" '$(PkgAWSSDK_ApiGatewayManagementApi)' == '' ">/Users/alexblack/.nuget/packages/awssdk.apigatewaymanagementapi/3.3.1.3</PkgAWSSDK_ApiGatewayManagementApi>
    <PkgAWSSDK_SimpleNotificationService Condition=" '$(PkgAWSSDK_SimpleNotificationService)' == '' ">/Users/alexblack/.nuget/packages/awssdk.simplenotificationservice/3.3.100.5</PkgAWSSDK_SimpleNotificationService>
    <PkgAWSSDK_S3 Condition=" '$(PkgAWSSDK_S3)' == '' ">/Users/alexblack/.nuget/packages/awssdk.s3/3.3.101.3</PkgAWSSDK_S3>
    <PkgAWSSDK_Polly Condition=" '$(PkgAWSSDK_Polly)' == '' ">/Users/alexblack/.nuget/packages/awssdk.polly/3.3.100.5</PkgAWSSDK_Polly>
    <PkgAWSSDK_Lambda Condition=" '$(PkgAWSSDK_Lambda)' == '' ">/Users/alexblack/.nuget/packages/awssdk.lambda/3.3.100.5</PkgAWSSDK_Lambda>
  </PropertyGroup>
</Project>